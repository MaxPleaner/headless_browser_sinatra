var search_data = {"index":{"searchIndex":["driverhelpers","headlessbrowser","headlessbrowsererror","headlessbrowsermessage","macrohelpers","routehelpers","routes","routesinit","selenium","webdriver","firefox","add_to_current_macro()","all_macros()","click_coords()","click_selector()","connect_to_firefox_with_timeout()","db()","default_screenshot()","default_screenshot_delay()","driver_has_current_page?()","ensure_current_page_exists()","ensure_element_is_selected()","enter_text()","error_out()","execute_commands_and_return_screenshot()","find_element_with_selector()","headless_with_customization()","included()","make_hash_keys_symbols()","make_url()","navigate()","new()","new()","on_click_script()","press_enter()","process_params()","refresh()","refresh_failsafe()","rescue_headless_browser_errors_and_messages()","rescue_selenium_javascript_errors()","run_commands_and_handle_errors()","save_current_macro()","screenshot()","send_jquery_autotype_if_undefined()","send_jquery_if_undefined()","send_jquery_style_if_undefined()","send_on_click_if_undefined()","send_param()","send_static_script()","set_firefox_binary_path!()","setup_headless_env()","setup_headless_env()","start_driver()","start_headless()","sync_scripts()","transform_params()","turn_macro_recording_off()","turn_macro_recording_on()","url_is_really_url?()","gemfile","gemfile.lock","readme","install.sh","jquery.autotype.js","jquery.js","jquery.style.js","style.css"],"longSearchIndex":["driverhelpers","headlessbrowser","headlessbrowsererror","headlessbrowsermessage","macrohelpers","routehelpers","routes","routesinit","selenium","selenium::webdriver","selenium::webdriver::firefox","routehelpers#add_to_current_macro()","macrohelpers#all_macros()","driverhelpers#click_coords()","driverhelpers#click_selector()","routesinit::connect_to_firefox_with_timeout()","macrohelpers#db()","routehelpers#default_screenshot()","headlessbrowser::default_screenshot_delay()","driverhelpers#driver_has_current_page?()","driverhelpers#ensure_current_page_exists()","driverhelpers#ensure_element_is_selected()","driverhelpers#enter_text()","driverhelpers#error_out()","routehelpers#execute_commands_and_return_screenshot()","driverhelpers#find_element_with_selector()","headlessbrowser::headless_with_customization()","macrohelpers::included()","headlessbrowser#make_hash_keys_symbols()","headlessbrowser#make_url()","driverhelpers#navigate()","driverhelpers::new()","headlessbrowser::new()","driverhelpers#on_click_script()","driverhelpers#press_enter()","headlessbrowser#process_params()","driverhelpers#refresh()","driverhelpers#refresh_failsafe()","routehelpers#rescue_headless_browser_errors_and_messages()","routehelpers#rescue_selenium_javascript_errors()","routehelpers#run_commands_and_handle_errors()","macrohelpers#save_current_macro()","headlessbrowser#screenshot()","driverhelpers#send_jquery_autotype_if_undefined()","driverhelpers#send_jquery_if_undefined()","driverhelpers#send_jquery_style_if_undefined()","driverhelpers#send_on_click_if_undefined()","headlessbrowser#send_param()","driverhelpers#send_static_script()","headlessbrowser::set_firefox_binary_path!()","routehelpers#setup_headless_env()","routesinit::setup_headless_env()","headlessbrowser::start_driver()","headlessbrowser::start_headless()","driverhelpers#sync_scripts()","headlessbrowser#transform_params()","macrohelpers#turn_macro_recording_off()","macrohelpers#turn_macro_recording_on()","headlessbrowser#url_is_really_url?()","","","","","","","",""],"info":[["DriverHelpers","","DriverHelpers.html","","<p>Included by lib/headless_browser.rb\n"],["HeadlessBrowser","","HeadlessBrowser.html","","<p>Define a class which loads a headless Firefox browser using selenium\n"],["HeadlessBrowserError","","HeadlessBrowserError.html","","<p>custom error class for the headless browser\n"],["HeadlessBrowserMessage","","HeadlessBrowserMessage.html","","<p>use raise / rescue to pass around generic messages as well\n"],["MacroHelpers","","MacroHelpers.html","","<p>The MacroHelpers class is used by lib/sinatra_routes.rb\n<p>It defines two constants on the Routes class: …\n"],["RouteHelpers","","RouteHelpers.html","","<p>The RouteHelpers module provides a bunch of useful methods to Routes\n<p>It is required from lib/sinatra_routes.rb …\n"],["Routes","","Routes.html","",""],["RoutesInit","","RoutesInit.html","",""],["Selenium","","Selenium.html","",""],["Selenium::WebDriver","","Selenium/WebDriver.html","",""],["Selenium::WebDriver::Firefox","","Selenium/WebDriver/Firefox.html","",""],["add_to_current_macro","RouteHelpers","RouteHelpers.html#method-i-add_to_current_macro","(params_obj)","<p>saves params to the Macros object\n"],["all_macros","MacroHelpers","MacroHelpers.html#method-i-all_macros","()",""],["click_coords","DriverHelpers","DriverHelpers.html#method-i-click_coords","(x, y)","<p>Click x,y coordinates on the page\n"],["click_selector","DriverHelpers","DriverHelpers.html#method-i-click_selector","(selector)","<p>Click an element on the page based on a CSS selector No front-end\nconnection yet exists for this\n"],["connect_to_firefox_with_timeout","RoutesInit","RoutesInit.html#method-c-connect_to_firefox_with_timeout","(num_seconds)","<p>try and connect to firefox, but don&#39;t hang too long upon failure\n"],["db","MacroHelpers","MacroHelpers.html#method-i-db","()",""],["default_screenshot","RouteHelpers","RouteHelpers.html#method-i-default_screenshot","(message)","<p>What to show if there is no new screenshot\n"],["default_screenshot_delay","HeadlessBrowser","HeadlessBrowser.html#method-c-default_screenshot_delay","()","<p>Set the default number of seconds to delay taking a screenshot\n"],["driver_has_current_page?","DriverHelpers","DriverHelpers.html#method-i-driver_has_current_page-3F","()","<p>Check if the driver is visiting any page\n"],["ensure_current_page_exists","DriverHelpers","DriverHelpers.html#method-i-ensure_current_page_exists","()","<p>unless there&#39;s a current page, raise an error and delete any remnant\nscreenshot\n"],["ensure_element_is_selected","DriverHelpers","DriverHelpers.html#method-i-ensure_element_is_selected","()","<p>Raise an error unless window.lastSelectedElement is set\n"],["enter_text","DriverHelpers","DriverHelpers.html#method-i-enter_text","(text)","<p>Enter text in the currently selected input\n"],["error_out","DriverHelpers","DriverHelpers.html#method-i-error_out","(text)","<p>stop processing commands, refresh the firefox javascript state, and raise\nan error\n"],["execute_commands_and_return_screenshot","RouteHelpers","RouteHelpers.html#method-i-execute_commands_and_return_screenshot","(params, most_recent_screenshot)","<p>execute commands on the headless browser by interpreting the params\n"],["find_element_with_selector","DriverHelpers","DriverHelpers.html#method-i-find_element_with_selector","(selector)","<p>Given a CSS selector, find an element on the page and return it as a\nSelenium::WebDriver::Element This …\n"],["headless_with_customization","HeadlessBrowser","HeadlessBrowser.html#method-c-headless_with_customization","()",""],["included","MacroHelpers","MacroHelpers.html#method-c-included","(base)",""],["make_hash_keys_symbols","HeadlessBrowser","HeadlessBrowser.html#method-i-make_hash_keys_symbols","(hash)",""],["make_url","HeadlessBrowser","HeadlessBrowser.html#method-i-make_url","(txt)","<p>Turns “gmail” into “gmail.com”, for example\n"],["navigate","DriverHelpers","DriverHelpers.html#method-i-navigate","(url)","<p>Send the browser to a web page\n"],["new","DriverHelpers","DriverHelpers.html#method-c-new","(driver)",""],["new","HeadlessBrowser","HeadlessBrowser.html#method-c-new","(headless_env, driver)","<p>HeadlessBrowser initializer\n"],["on_click_script","DriverHelpers","DriverHelpers.html#method-i-on_click_script","()","<p>a script&#39;s text, which can be sent to the client via execute_script\nPractically, this stores a client-side …\n"],["press_enter","DriverHelpers","DriverHelpers.html#method-i-press_enter","()","<p>to submit a form containing the selected input\n"],["process_params","HeadlessBrowser","HeadlessBrowser.html#method-i-process_params","(params_obj)","<p>Interpret parameters from routes and run commands accordingly returns a\nboolean indicating whether a …\n"],["refresh","DriverHelpers","DriverHelpers.html#method-i-refresh","()","<p>Refresh the page using Javascript\n"],["refresh_failsafe","DriverHelpers","DriverHelpers.html#method-i-refresh_failsafe","()","<p>Refresh the page using selenium&#39;s API in case of halting Javascript\nerrors\n"],["rescue_headless_browser_errors_and_messages","RouteHelpers","RouteHelpers.html#method-i-rescue_headless_browser_errors_and_messages","(&blk)",""],["rescue_selenium_javascript_errors","RouteHelpers","RouteHelpers.html#method-i-rescue_selenium_javascript_errors","(&blk)",""],["run_commands_and_handle_errors","RouteHelpers","RouteHelpers.html#method-i-run_commands_and_handle_errors","(params, most_recent_screenshot)","<p>returns [screenshot_path, error_message]\n"],["save_current_macro","MacroHelpers","MacroHelpers.html#method-i-save_current_macro","(given_params)",""],["screenshot","HeadlessBrowser","HeadlessBrowser.html#method-i-screenshot","()","<p>saves a screenshot to “public/screenshot.jog”\n"],["send_jquery_autotype_if_undefined","DriverHelpers","DriverHelpers.html#method-i-send_jquery_autotype_if_undefined","()","<p>Sends jquery autotype unless the page already defines $.fn.autotype\n"],["send_jquery_if_undefined","DriverHelpers","DriverHelpers.html#method-i-send_jquery_if_undefined","()","<p>Sends jQuery unless the page already defines jQuery\n"],["send_jquery_style_if_undefined","DriverHelpers","DriverHelpers.html#method-i-send_jquery_style_if_undefined","()","<p>This jquery plugin assists in setting styles with the !important tag\n"],["send_on_click_if_undefined","DriverHelpers","DriverHelpers.html#method-i-send_on_click_if_undefined","()","<p>Sends onclick unless window.hasOnClick is true\n"],["send_param","HeadlessBrowser","HeadlessBrowser.html#method-i-send_param","(name, val)","<p>Run the command indicated by a particular param Returns a bool indicating\nwhether the command calls for …\n"],["send_static_script","DriverHelpers","DriverHelpers.html#method-i-send_static_script","(path)","<p>Sends a static script such as jquery\n"],["set_firefox_binary_path!","HeadlessBrowser","HeadlessBrowser.html#method-c-set_firefox_binary_path-21","()","<p>lib/firefox is a symlink to firefox-sdk/bin/firefox\n"],["setup_headless_env","RouteHelpers","RouteHelpers.html#method-i-setup_headless_env","()","<p>don&#39;t wait a full minute before raising an error if Firefox is\nunresponsive\n"],["setup_headless_env","RoutesInit","RoutesInit.html#method-c-setup_headless_env","()","<p>call methods in lib/headless_browser to lauch headless &amp; firefox The\nRoutes::Browser constant is …\n"],["start_driver","HeadlessBrowser","HeadlessBrowser.html#method-c-start_driver","()","<p>Create a firefox driver that can be passed to HeadlessBrowser.new\n"],["start_headless","HeadlessBrowser","HeadlessBrowser.html#method-c-start_headless","()","<p>Create a headless environment that can be passed to HeadlessBrowser.new\n"],["sync_scripts","DriverHelpers","DriverHelpers.html#method-i-sync_scripts","()",""],["transform_params","HeadlessBrowser","HeadlessBrowser.html#method-i-transform_params","(params_obj)","<p>transform the params object\n"],["turn_macro_recording_off","MacroHelpers","MacroHelpers.html#method-i-turn_macro_recording_off","(given_params)",""],["turn_macro_recording_on","MacroHelpers","MacroHelpers.html#method-i-turn_macro_recording_on","(given_params)","<p>content for /macro_on route\n"],["url_is_really_url?","HeadlessBrowser","HeadlessBrowser.html#method-i-url_is_really_url-3F","(url)","<p>A pretty lenient check to see if a url is valid\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p>gem &#39;headless&#39; gem &#39;selenium-webdriver&#39; gem\n&#39;sinatra&#39; …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: http://rubygems.org/\nspecs:\n  activesupport (4.2.7)\n    i18n (~&gt; 0.7)\n    json (~&gt; 1.7, &gt;= ...</pre>\n"],["README","","README_md.html","","<p>This is a Sinatra app with route definitions in\n<code>start_server.rb</code>\n<p>It requires <code>lib/headless_browser.rb</code>, which …\n"],["install.sh","","install_sh.html","","<p>#!/bin/bash\n<p># Tell the user what this script does. Sleep 5 seconds while they decide to\nproceed or not …\n"],["jquery.autotype.js","","public/jquery_autotype_js.html","","\n<pre>jQuery.autotype - Simple, accurate, typing simulation for jQuery\n\nversion 0.5.0\n\nhttp://michaelmonteleone.net/projects/autotype ...</pre>\n"],["jquery.js","","public/jquery_js.html","","\n<pre>! jQuery v2.2.5-pre | (c) jQuery Foundation | jquery.org/license</pre>\n<p>!function(a,b){“object”==typeof …\n"],["jquery.style.js","","public/jquery_style_js.html","","<p>(function($) {\n\n<pre>if ($.fn.style) {\n  return;\n}\n\n// Escape regex chars with \\\nvar escape = function(text) ...</pre>\n"],["style.css","","public/style_css.html","","<p>F   Body and HTML\n<p>body, html {\n\n<pre>height: 100%; width: 100%;\nbackground-color: black;\ncolor: lightgreen;</pre>\n"]]}}